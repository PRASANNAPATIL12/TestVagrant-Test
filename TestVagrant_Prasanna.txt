
//NAME:-Prasannagouda S Patil
//USN:-1BI20IS063
//YEAR OF PASSING:- 2024
//BRANCH:-ISE
//PHONE NUMBER:- 9448677888
//EMAIL:- pspatil777888@gmail.com


import java.util.*;

class Merchandise {
    String itemName;
    double unitPrice;
    double gstRate;
    int quantity;

    public Merchandise(String itemName, double unitPrice, double gstRate, int quantity) {
        this.itemName = itemName;
        this.unitPrice = unitPrice;
        this.gstRate = gstRate;
        this.quantity = quantity;
    }

    public double calculateDiscountedPrice() {
        double discountedPrice = unitPrice * quantity;
        if (unitPrice >= 500) {
            discountedPrice *= 0.95;
        }
        return discountedPrice;
    }

    public double calculateGSTAmount() {
        return (unitPrice * gstRate / 100) * quantity;
    }
}

public class StoreManager {
    public static void main(String[] args) {
        List<Merchandise> cart = new ArrayList<>();
        cart.add(new Merchandise("Leather Wallet", 1100, 18, 1));
        cart.add(new Merchandise("Umbrella", 900, 12, 4));
        cart.add(new Merchandise("Cigarette", 200, 28, 3));
        cart.add(new Merchandise("Honey", 100, 0, 2));

        Merchandise maxGSTItem = itemWithMaxGST(cart);
        System.out.println("Item with maximum GST amount: " + maxGSTItem.itemName);

        double totalAmountToPay = calculateAmountToPay(cart);
        System.out.println("Total amount to be paid to the store manager: Rs" + totalAmountToPay);
    }

    private static Merchandise itemWithMaxGST(List<Merchandise> cart) {
        double maxGSTAmount = 0;
        Merchandise maxGSTItem = null;

        for (Merchandise item : cart) {
            double gstAmount = item.calculateGSTAmount();
            if (gstAmount > maxGSTAmount) {
                maxGSTAmount = gstAmount;
                maxGSTItem = item;
            }
        }

        return maxGSTItem;
    }

    private static double calculateAmountToPay(List<Merchandise> cart) {
        double totalAmount = 0;

        for (Merchandise item : cart) {
            totalAmount += item.calculateDiscountedPrice() + item.calculateGSTAmount();
        }

        return totalAmount;
    }
}
